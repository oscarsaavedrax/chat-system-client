{"ast":null,"code":"var _jsxFileName = \"/Users/oscarsaavedra/Desktop/Projects/ChatAppPractice/client/src/components/ChatFooter.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { SocketContext } from \"../contexts/socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatFooter = () => {\n  _s();\n  // Get the socket from the socket context\n  const socket = useContext(SocketContext);\n  const [message, setMessage] = useState(\"\");\n  const handleSendMessage = e => {\n    e.preventDefault();\n    // Check message is not empty & username exists\n    if (message.trim() && localStorage.getItem(\"ChatAppPractice-userName\")) {\n      // Send message to the server\n      socket.emit(\"send-message\", {\n        text: message,\n        name: localStorage.getItem(\"ChatAppPractice-userName\"),\n        id: \"\" + socket.id + Math.random(),\n        socketID: socket.id\n      });\n    }\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__footer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write message\",\n        className: \"message\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sendBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatFooter, \"W8BlWkDW2Ynvrl7j8MWWUSBOuHw=\");\n_c = ChatFooter;\nexport default ChatFooter;\nvar _c;\n$RefreshReg$(_c, \"ChatFooter\");","map":{"version":3,"names":["React","useContext","useState","SocketContext","jsxDEV","_jsxDEV","ChatFooter","_s","socket","message","setMessage","handleSendMessage","e","preventDefault","trim","localStorage","getItem","emit","text","name","id","Math","random","socketID","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/oscarsaavedra/Desktop/Projects/ChatAppPractice/client/src/components/ChatFooter.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { SocketContext } from \"../contexts/socket\";\n\nconst ChatFooter = () => {\n  // Get the socket from the socket context\n  const socket = useContext(SocketContext);\n  const [message, setMessage] = useState(\"\");\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    // Check message is not empty & username exists\n    if (message.trim() && localStorage.getItem(\"ChatAppPractice-userName\")) {\n      // Send message to the server\n      socket.emit(\"send-message\", {\n        text: message,\n        name: localStorage.getItem(\"ChatAppPractice-userName\"),\n        id: \"\" + socket.id + Math.random(),\n        socketID: socket.id,\n      });\n    }\n\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"chat__footer\">\n      <form className=\"form\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          placeholder=\"Write message\"\n          className=\"message\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n\n        <button className=\"sendBtn\">SEND</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatFooter;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAMC,MAAM,GAAGP,UAAU,CAACE,aAAa,CAAC;EACxC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAClB;IACA,IAAIJ,OAAO,CAACK,IAAI,EAAE,IAAIC,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,EAAE;MACtE;MACAR,MAAM,CAACS,IAAI,CAAC,cAAc,EAAE;QAC1BC,IAAI,EAAET,OAAO;QACbU,IAAI,EAAEJ,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC;QACtDI,EAAE,EAAE,EAAE,GAAGZ,MAAM,CAACY,EAAE,GAAGC,IAAI,CAACC,MAAM,EAAE;QAClCC,QAAQ,EAAEf,MAAM,CAACY;MACnB,CAAC,CAAC;IACJ;IAEAV,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEL,OAAA;IAAKmB,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BpB,OAAA;MAAMmB,SAAS,EAAC,MAAM;MAACE,QAAQ,EAAEf,iBAAkB;MAAAc,QAAA,gBACjDpB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,eAAe;QAC3BJ,SAAS,EAAC,SAAS;QACnBK,KAAK,EAAEpB,OAAQ;QACfqB,QAAQ,EAAGlB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACmB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C,eAEF9B,OAAA;QAAQmB,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAAC5B,EAAA,CApCID,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}