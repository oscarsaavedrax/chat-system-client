{"ast":null,"code":"var _jsxFileName = \"/Users/oscarsaavedra/Desktop/Projects/ChatAppPractice/client/src/components/ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { SocketContext } from \"../contexts/socket\";\nimport ChatBar from \"./ChatBar\";\nimport ChatBody from \"./ChatBody\";\nimport ChatFooter from \"./ChatFooter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const socket = useContext(SocketContext);\n  const [messageList, setMessageList] = useState([]);\n  const lastMessageRef = useRef(null);\n\n  // Get the list of messages from server\n  useEffect(() => {\n    socket.on(\"receive-message\", data => setMessageList([...messageList, data]));\n  }, [socket, messageList]);\n\n  // Scrool to bottom every time messages change\n  useEffect(() => {\n    var _lastMessageRef$curre;\n    (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messageList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__main\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBody, {\n        messages: messageList,\n        lastMessageRef: lastMessageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"FszP6Ix91r9Eum2296yq1irLMYA=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","SocketContext","ChatBar","ChatBody","ChatFooter","jsxDEV","_jsxDEV","ChatPage","_s","socket","messageList","setMessageList","lastMessageRef","on","data","_lastMessageRef$curre","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","messages","_c","$RefreshReg$"],"sources":["/Users/oscarsaavedra/Desktop/Projects/ChatAppPractice/client/src/components/ChatPage.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { SocketContext } from \"../contexts/socket\";\nimport ChatBar from \"./ChatBar\";\nimport ChatBody from \"./ChatBody\";\nimport ChatFooter from \"./ChatFooter\";\n\nconst ChatPage = () => {\n  const socket = useContext(SocketContext);\n  const [messageList, setMessageList] = useState([]);\n  const lastMessageRef = useRef(null);\n\n  // Get the list of messages from server\n  useEffect(() => {\n    socket.on(\"receive-message\", (data) =>\n      setMessageList([...messageList, data])\n    );\n  }, [socket, messageList]);\n\n  // Scrool to bottom every time messages change\n  useEffect(() => {\n    lastMessageRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messageList]);\n\n  return (\n    <div className=\"chat\">\n      <ChatBar />\n      <div className=\"chat__main\">\n        <ChatBody messages={messageList} lastMessageRef={lastMessageRef} />\n        <ChatFooter />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,MAAM,GAAGZ,UAAU,CAACI,aAAa,CAAC;EACxC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMY,cAAc,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACAD,SAAS,CAAC,MAAM;IACdW,MAAM,CAACI,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAChCH,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEI,IAAI,CAAC,CAAC,CACvC;EACH,CAAC,EAAE,CAACL,MAAM,EAAEC,WAAW,CAAC,CAAC;;EAEzB;EACAZ,SAAS,CAAC,MAAM;IAAA,IAAAiB,qBAAA;IACd,CAAAA,qBAAA,GAAAH,cAAc,CAACI,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;EAEjB,oBACEJ,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBd,OAAA,CAACJ,OAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACXlB,OAAA;MAAKa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBd,OAAA,CAACH,QAAQ;QAACsB,QAAQ,EAAEf,WAAY;QAACE,cAAc,EAAEA;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnElB,OAAA,CAACF,UAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAChB,EAAA,CA1BID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}